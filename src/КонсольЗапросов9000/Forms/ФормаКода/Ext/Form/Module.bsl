
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КопироватьДанныеФормы(Параметры.Объект, Объект);
	
	Заголовок = Параметры.Заголовок;
	ИмяЗапроса = Параметры.ИмяЗапроса;
	ПараметрыЗапроса = Параметры.ПараметрыЗапроса;
	ТекстЗапроса.УстановитьТекст(Параметры.ТекстЗапроса);
	
	УстановитьЗначенияПараметров = РеквизитФормыВЗначение("Объект").СохраняемыеСостояния_Получить("УстановитьЗначенияПараметров", Истина);
	
	СоздатьКодСПараметрами();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЛитералСсылки(НазваниеМенеджера, НазваниеВЗапросе, Значение)
	
	ИмяМетаданных = Значение.Метаданные().Имя;
	
	Если НазваниеМенеджера <> "Документы" И НазваниеМенеджера <> "БизнесПроцессы" И НазваниеМенеджера <> "Задачи"
		И НазваниеМенеджера <> "ПланыОбмена" Тогда
		
		зПредопределенные = Новый Запрос(СтрШаблон(
			"ВЫБРАТЬ
			|	Таблица.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
			|ИЗ
			|	%1.%2 КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Значение
			|	И Таблица.Предопределенный", НазваниеВЗапросе, ИмяМетаданных));
		зПредопределенные.УстановитьПараметр("Значение", Значение);
		
		рзПредопределенные = зПредопределенные.Выполнить();
		Если НЕ рзПредопределенные.Пустой() Тогда
			выбПредопределенные = рзПредопределенные.Выбрать();
			выбПредопределенные.Следующий();
			Возврат СтрШаблон("%1.%2.%3", НазваниеМенеджера, ИмяМетаданных, выбПредопределенные.ИмяПредопределенныхДанных); 
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтрШаблон(
		"%1.%2.ПолучитьСсылку(Новый УникальныйИдентификатор(""%3""))",
		НазваниеМенеджера,
		ИмяМетаданных,
		Значение.УникальныйИдентификатор());
	
КонецФункции

&НаСервере
Процедура ПолучитьКодСпискаЗначений(Значение, ИмяПараметра, стрЛитерал, стрКомментарий, стрКодСоздания)
	
	стрКомментарий = Неопределено;
	
	маСтрокиДобавления = Новый Массив;
	Для Каждого эсз Из Значение Цикл
		маСтрокиДобавления.Добавить(СтрШаблон("	%1.Добавить(%2);", ИмяПараметра, ПолучитьЛитералЗначения(эсз.Значение).Литерал));
	КонецЦикла;
	
	стрКодСоздания = СтрШаблон(
		"	%1 = Новый СписокЗначений;
		|%2",
		ИмяПараметра,
		СтрСоединить(маСтрокиДобавления, "
		|"));
	
	стрЛитерал = ИмяПараметра;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьКодМассива(Значение, ИмяПараметра, стрЛитерал, стрКомментарий = Неопределено, стрКодСоздания = Неопределено)
	
	стрКомментарий = Неопределено;
	
	маСтрокиДобавления = Новый Массив;
	Для Каждого ЗначениеМассива Из Значение Цикл
		маСтрокиДобавления.Добавить(СтрШаблон("	%1.Добавить(%2);", ИмяПараметра, ПолучитьЛитералЗначения(ЗначениеМассива).Литерал));
	КонецЦикла;
	
	стрКодСоздания = СтрШаблон(
		"	%1 = Новый Массив;
		|%2",
		ИмяПараметра,
		СтрСоединить(маСтрокиДобавления, "
		|"));
	
	стрЛитерал = ИмяПараметра;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЛитералЧастиДаты(ЗначениеЧастиДаты)
	Если ЗначениеЧастиДаты = ЧастиДаты.Время Тогда
		Возврат "ЧастиДаты.Время";
	ИначеЕсли ЗначениеЧастиДаты = ЧастиДаты.Дата Тогда
		Возврат "ЧастиДаты.Дата";
	ИначеЕсли ЗначениеЧастиДаты = ЧастиДаты.ДатаВремя Тогда
		Возврат "ЧастиДаты.ДатаВремя";
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЛитералДопустимаяДлина(ЗначениеДопустимаяДлина)
	Если ЗначениеДопустимаяДлина = ДопустимаяДлина.Переменная Тогда
		Возврат "ДопустимаяДлина.Переменная";
	ИначеЕсли ЗначениеДопустимаяДлина = ДопустимаяДлина.Фиксированная Тогда
		Возврат "ДопустимаяДлина.Фиксированная";
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЛитералДопустимыйЗнак(ЗначениеДопустимыйЗнак)
	Если ЗначениеДопустимыйЗнак = ДопустимыйЗнак.Любой Тогда
		Возврат "ДопустимыйЗнак.Любой";
	ИначеЕсли ЗначениеДопустимыйЗнак = ДопустимыйЗнак.Неотрицательный Тогда
		Возврат "ДопустимыйЗнак.Неотрицательный";
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ПолучитьЛитералОписанияТипов(ОписаниеТиповЗначения, стрЛитерал, стрКодСоздания)
	
	стрЛитерал = Неопределено;
	срКодСоздания = Неопределено;
	
	маТипы = ОписаниеТиповЗначения.Типы();
	Если маТипы.Количество() = 0 Тогда
		стрЛитерал = "Новый ОписаниеТипов()";
		Возврат;
	КонецЕсли;
	
	Обработка = РеквизитФормыВЗначение("Объект");
	
	Если ОписаниеТиповЗначения.СодержитТип(Тип("Дата")) Тогда
		стрКвалификаторы = СтрШаблон(
			", Новый КвалификаторыДаты(%1)",
			ПолучитьЛитералЧастиДаты(ОписаниеТиповЗначения.КвалификаторыДаты.ЧастиДаты));
	Иначе
		стрКвалификаторы = "";
	КонецЕсли;
		
	Если ОписаниеТиповЗначения.СодержитТип(Тип("Строка")) Тогда
		стрКвалификаторы = СтрШаблон(
			", Новый КвалификаторыСтроки(%1, %2)%3",
			ОписаниеТиповЗначения.КвалификаторыСтроки.Длина,
			ПолучитьЛитералДопустимаяДлина(ОписаниеТиповЗначения.КвалификаторыСтроки.ДопустимаяДлина),
			стрКвалификаторы);
	Иначе
		Если ЗначениеЗаполнено(стрКвалификаторы) Тогда
			стрКвалификаторы = ", " + стрКвалификаторы;
		КонецЕсли;
	КонецЕсли;
		
	Если ОписаниеТиповЗначения.СодержитТип(Тип("Число")) Тогда
		стрКвалификаторы = СтрШаблон(
			", Новый КвалификаторыЧисла(%1, %2, %3)%4",
			ОписаниеТиповЗначения.КвалификаторыЧисла.Разрядность,
			ОписаниеТиповЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти,
			ПолучитьЛитералДопустимыйЗнак(ОписаниеТиповЗначения.КвалификаторыЧисла.ДопустимыйЗнак),
			стрКвалификаторы);
	Иначе
		Если ЗначениеЗаполнено(стрКвалификаторы) Тогда
			стрКвалификаторы = ", " + стрКвалификаторы;
		КонецЕсли;
	КонецЕсли;
	
	Если маТипы.Количество() = 1 Тогда
		стрЛитерал = СтрШаблон(
			"Новый ОписаниеТипов(""%1""%2)",
			Обработка.ПолучитьИмяТипа(маТипы[0]),
			стрКвалификаторы);
		Возврат;
	КонецЕсли;

	маСозданиеТипа = Новый Массив;
	маСозданиеТипа.Добавить("	ТипыКолонки = Новый Массив;");
	Для Каждого Т Из маТипы Цикл
		маСозданиеТипа.Добавить(СтрШаблон("	ТипыКолонки.Добавить(Тип(""%1""));", Обработка.ПолучитьИмяТипа(Т)));
	КонецЦикла;
	
	стрЛитерал = СтрШаблон(
		"Новый ОписаниеТипов(ТипыКолонки%1)",
		стрКвалификаторы);
		
	стрКодСоздания = СтрСоединить(маСозданиеТипа, "
	|");
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьКодСозданияКолонки(маКодСоздания, ИмяПараметра, Колонка)
	Перем стрЛитералТипа, стрКодСоздания;
	
	ПолучитьЛитералОписанияТипов(Колонка.ТипЗначения, стрЛитералТипа, стрКодСоздания);
	
	Если ЗначениеЗаполнено(стрКодСоздания) Тогда
		маКодСоздания.Добавить(стрКодСоздания);
	КонецЕсли;
	
	маКодСоздания.Добавить(СтрШаблон("	%1.Колонки.Добавить(""%2"", %3);", ИмяПараметра, Колонка.Имя, стрЛитералТипа));
		
КонецПроцедуры

&НаСервере
Процедура ПолучитьКодТаблицыЗначений(Значение, ИмяПараметра, стрЛитерал, стрКомментарий, стрКодСоздания)
	
	стрКомментарий = Неопределено;
	
	маСтрокиДобавления = Новый Массив;
	Для Каждого ЗначениеМассива Из Значение Цикл
		маСтрокиДобавления.Добавить(СтрШаблон("	%1.Добавить(%2);", ИмяПараметра, ПолучитьЛитералЗначения(ЗначениеМассива).Литерал));
	КонецЦикла;
	
	маКодСоздания = Новый Массив;
	маКодСоздания.Добавить(СтрШаблон("	%1 = Новый ТаблицаЗначений;", ИмяПараметра));
	Для Каждого Колонка Из Значение.Колонки Цикл
		ДобавитьКодСозданияКолонки(маКодСоздания, ИмяПараметра, Колонка);
	КонецЦикла;
	
	Для Каждого Строка Из Значение Цикл
		
		маКодСоздания.Добавить(СтрШаблон("	СтрокаТаблицы = %1.Добавить();", ИмяПараметра));
		
		Для Каждого Колонка Из Значение.Колонки Цикл
			
			стЛитерал = ПолучитьЛитералЗначения(Строка[Колонка.Имя]);
			стрКодПрисвоения = СтрШаблон("	СтрокаТаблицы.%1 = %2;", Колонка.Имя, стЛитерал.Литерал);
			
			Если ЗначениеЗаполнено(стЛитерал.Комментарий) Тогда
				стрКодПрисвоения = СтрШаблон("%1 // %2", стрКодПрисвоения, стЛитерал.Комментарий);
			КонецЕсли;
			
			маКодСоздания.Добавить(стрКодПрисвоения);
			
		КонецЦикла;
		
	КонецЦикла;
	
	стрКодСоздания = СтрСоединить(маКодСоздания, "
	|");
	
	стрЛитерал = ИмяПараметра;
	
КонецПроцедуры
		
&НаСервере
Функция ПолучитьЛитералЗначения(Значение, ИмяПараметра = Неопределено)
	
	стрЛитерал = Неопределено;
	стрКомментарий = Неопределено;
	стрКодСоздания = Неопределено;
	
	ТипЗначения = ТипЗнч(Значение);
	Если ТипЗначения = Тип("Строка") Тогда
		стрЛитерал = СтрШаблон("""%1""", Значение);
	ИначеЕсли ТипЗначения = Тип("Число") Тогда
		стрЛитерал = Формат(Значение, "ЧГ=");
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		
		Г = Год(Значение);
		М = Месяц(Значение);
		Д = День(Значение);
		Ч = Час(Значение);
		Мин = Минута(Значение);
		Сек = Секунда(Значение);
		
		стрЗначение = Формат(Г, "ЧЦ=4; ЧВН=; ЧГ=") + Формат(М, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(Д, "ЧЦ=2; ЧВН=; ЧГ=");
		Если Ч <> 0 ИЛИ Мин <> 0 И Сек <> 0 Тогда
			стрЗначение = стрЗначение + Формат(Ч, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(Мин, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(Сек, "ЧЦ=2; ЧВН=; ЧГ=");
		КонецЕсли;
		
		стрЛитерал = СтрШаблон("'%1'", стрЗначение);
		
	ИначеЕсли ТипЗначения = Тип("Null") Тогда
		стрЛитерал = "Null";
	ИначеЕсли ТипЗначения = Тип("Неопределено") Тогда
		стрЛитерал = "Неопределено";
	ИначеЕсли ТипЗначения = Тип("УникальныйИдентификатор") Тогда
		стрЛитерал = СтрШаблон("Новый УникальныйИдентификатор(""%1"")", Строка(Значение));
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		стрЛитерал = ?(Значение, "Истина", "Ложь");
	ИначеЕсли ТипЗначения = Тип("Граница") Тогда
		стЛитералЗначенияГраницы = ПолучитьЛитералЗначения(Значение.Значение);
		стрЛитерал = СтрШаблон("Новый Граница(%1, %2)",
			стЛитералЗначенияГраницы.Литерал,
			СтрШаблон("ВидГраницы.%1", Значение.ВидГраницы));
	ИначеЕсли ТипЗначения = Тип("МоментВремени") Тогда
		стЛитералДаты = ПолучитьЛитералЗначения(Значение.Дата);
		стЛитералСсылки = ПолучитьЛитералЗначения(Значение.Ссылка);
		стрЛитерал = СтрШаблон("Новый МоментВремени(%1, %2)",
			стЛитералДаты.Литерал, стЛитералСсылки.Литерал);
			стрКомментарий = стЛитералСсылки.Комментарий;
	ИначеЕсли ТипЗначения = Тип("ВидДвиженияНакопления") Тогда
		стрЛитерал = СтрШаблон("ВидДвиженияНакопления.%1", Значение);
	ИначеЕсли ТипЗначения = Тип("ВидДвиженияБухгалтерии") Тогда
		стрЛитерал = СтрШаблон("ВидДвиженияБухгалтерии.%1", Значение);
	ИначеЕсли ТипЗначения = Тип("ВидСчета") Тогда
		стрЛитерал = СтрШаблон("ВидСчета.%1", Значение);
	ИначеЕсли ТипЗначения = Тип("Тип") Тогда
		стрЛитерал = СтрШаблон("Тип(""%1"")", РеквизитФормыВЗначение("Объект").ПолучитьИмяТипа(Значение));
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("Справочники", "Справочник", Значение);
		стрКомментарий = СтрШаблон("%1 %2", Значение.Код, Значение.Наименование);
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("Документы", "Документ", Значение);
		стрКомментарий = Строка(Значение);
	ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		//стрЛитерал = ПолучитьЛитералСсылки("Перечисления", "Перечисление", Значение);
		МетаданныеПеречисления = Значение.Метаданные();
		Менеджер = Перечисления[МетаданныеПеречисления.Имя];
		ИдентификаторПеречисления = МетаданныеПеречисления.ЗначенияПеречисления.Получить(Менеджер.Индекс(Значение)).Имя;
		стрЛитерал = СтрШаблон("Перечисления.%1.%2", Значение.Метаданные().Имя, ИдентификаторПеречисления);
	ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("ПланыВидовХарактеристик", "ПланВидовХарактеристик", Значение);
		стрКомментарий = СтрШаблон("%1 %2", Значение.Код, Значение.Наименование);
	ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("ПланыВидовРасчета", "ПланВидовРасчета", Значение);
		стрКомментарий = СтрШаблон("%1 %2", Значение.Код, Значение.Наименование);
	ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("ПланыСчетов", "ПланСчетов", Значение);
		стрКомментарий = Значение.Код;
	ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("БизнесПроцессы", "БизнесПроцесс", Значение);
		стрКомментарий = Строка(Значение);
	ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("Задачи", "Задача", Значение);
		стрКомментарий = Строка(Значение);
	ИначеЕсли ПланыОбмена.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		стрЛитерал = ПолучитьЛитералСсылки("ПланыОбмена", "ПланОбмена", Значение);
		стрКомментарий = СтрШаблон("%1 %2", Значение.Код, Значение.Наименование);
	ИначеЕсли ТипЗначения = Тип("СписокЗначений") Тогда
		ПолучитьКодСпискаЗначений(Значение, ИмяПараметра, стрЛитерал, стрКомментарий, стрКодСоздания);
	ИначеЕсли ТипЗначения = Тип("Массив") Тогда
		ПолучитьКодМассива(Значение, ИмяПараметра, стрЛитерал, стрКомментарий, стрКодСоздания);
	ИначеЕсли ТипЗначения = Тип("ТаблицаЗначений") Тогда
		ПолучитьКодТаблицыЗначений(Значение, ИмяПараметра, стрЛитерал, стрКомментарий, стрКодСоздания);
	КонецЕсли;
	
	Если стрЛитерал = Неопределено Тогда
		Возврат Новый Структура("Литерал, Комментарий, КодСоздания", "???");
	КонецЕсли;
	
	Возврат Новый Структура("Литерал, Комментарий, КодСоздания", стрЛитерал, стрКомментарий, стрКодСоздания);
	
КонецФункции

&НаСервере
Процедура СоздатьКодСПараметрами()
	
	Текст = Новый ТекстовыйДокумент;
	Текст.ДобавитьСтроку(СтрШаблон("	%1 = Новый Запрос(""", ИмяЗапроса));
	
	Для й = 1 По ТекстЗапроса.КоличествоСтрок() Цикл
		Строка = ТекстЗапроса.ПолучитьСтроку(й);
		Текст.ДобавитьСтроку(СтрШаблон("		|%1", Строка));
	КонецЦикла;
	
	Текст.ЗаменитьСтроку(Текст.КоличествоСтрок(), Текст.ПолучитьСтроку(Текст.КоличествоСтрок()) + """);
	|");
	
	тзПараметрыЗапроса = РеквизитФормыВЗначение("Объект").СтрокаВЗначение(ПараметрыЗапроса);
	
	Для Каждого СтрокаПараметра Из тзПараметрыЗапроса Цикл
		
		ИмяПараметра = СтрокаПараметра.Имя;
		Значение = СтрокаПараметра.Значение;
		
		Если УстановитьЗначенияПараметров Тогда
			
			стЛитерал = ПолучитьЛитералЗначения(Значение, ИмяПараметра);
			
			Если ЗначениеЗаполнено(стЛитерал.КодСоздания) Тогда
				Если ЗначениеЗаполнено(Текст.ПолучитьСтроку(Текст.КоличествоСтрок())) Тогда
					Текст.ДобавитьСтроку("");
				КонецЕсли;
				Текст.ДобавитьСтроку(стЛитерал.КодСоздания);
			КонецЕсли;
			
			стрПараметр = СтрШаблон("	%1.УстановитьПараметр(""%2"", %3);", ИмяЗапроса, ИмяПараметра, стЛитерал.Литерал);
			
			Если ЗначениеЗаполнено(стЛитерал.Комментарий) Тогда
				стрПараметр = СтрШаблон("%1 //%2", стрПараметр, стЛитерал.Комментарий);
			КонецЕсли;
			
			Текст.ДобавитьСтроку(стрПараметр);
			
			Если ЗначениеЗаполнено(стЛитерал.КодСоздания) Тогда
				Текст.ДобавитьСтроку("");
			КонецЕсли;
			
		Иначе
			Текст.ДобавитьСтроку(СтрШаблон("	%1.УстановитьПараметр(""%2"", );", ИмяЗапроса, ИмяПараметра));
		КонецЕсли;
		
	КонецЦикла;
	
	Текст.ДобавитьСтроку("");
	Текст.ДобавитьСтроку(СтрШаблон("	РезультатЗапроса = %1.Выполнить();", ИмяЗапроса));
	Текст.ДобавитьСтроку("	Выборка = РезультатЗапроса.Выбрать();");
	Текст.ДобавитьСтроку("	Пока Выборка.Следующий() Цикл");
	Текст.ДобавитьСтроку("		");
	Текст.ДобавитьСтроку("	КонецЦикла;");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	СоздатьКодСПараметрами();
КонецПроцедуры

&НаКлиенте
Процедура Команда_Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ВладелецФормы.СохраняемыеСостояния_Сохранить("УстановитьЗначенияПараметров", УстановитьЗначенияПараметров);
КонецПроцедуры

